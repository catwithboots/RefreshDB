Issues:
GetSourceSavesetPathByInstance werkt niet met db's met speciale karakters zoals een spatie -> Hoe waarde via url te verzenden indien spaties
Make Web.config database server variable and editable in Wix


ToDo:
Add version number to artifact name
Script to copy artifacts to artifact repo
Chef cookbook for deploying dacpacs
Create database role for service account(s)
Create front end for administring data into sqlrefreshdb
Create logging!!!!
Figure out stuff with debug|release
Check wix heat with 64 bit
Make refreshdb in C# without using psremote


Researched:

Set Web.config variables via the Wix installer:
	->

Automatic version numbering database projects
	-> https://social.msdn.microsoft.com/Forums/sqlserver/en-US/e0c93a55-d8bd-4a32-89d9-f46013fc1235/automatic-version-increment-on-datatier-applications?forum=ssdt

Automatic version numbering VS Solution with Jenkins and Wix
	-> Install the version number plugin
	-> Configure the plugin within the Jenkins project
	-> Define the environment variable in Wix <?define VersionNumber = "$(env.SQLREFRESHDB_VERSION)" ?>
	-> Call the $(var.VersionNumber) within the rest of Wix
	-> To prevent local build failures because the environment variable sqlrefreshdb_version does not exists:
		<?ifdef env.SQLREFRESHDB_VERSION?>
		<?define VersionNumber = "$(env.SQLREFRESHDB_VERSION)" ?>
		<?else?>
		<?define VersionNumber = "99.99.99.99" ?>
		<?endif?>

Automatic version numbering all VS Solution items (dll's) with Jenkins
	-> Install the change assembly version plugin (there's a bug for windows systems -> https://issues.jenkins-ci.org/browse/JENKINS-25476?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel)
	-> If bug is fixed, you can use the plugin as a prestep of your msbuild
	-> Add a powershell script to your solution called ApplyVersionToAssemblies.ps1 (it's a fork from the ps1 in codeplex for tfs builds)
	-> It will lookup the environment variable for the version and apply it to each assemblyinfo.* file
	-> Add this as a powershell build (pre)step using the workspace variable.
	-> Start your build

Uninstall webapplication with Wix when using variable names of the sites and application pools
	-> Create a property for the variable names with a registry search value: 
		<Property Id="APPPOOL_NAME">
		  <RegistrySearch Id="WebAppPoolName" Root="HKLM" Key="Software\[Manufacturer]\[ProductName]" Name="AppPool" Type="raw"></RegistrySearch>
		</Property>
	-> If the msi is not installed before, there won't be an value, so do a default empty set of the registry:
		<SetProperty Id="APPPOOL_NAME" Value="AppPool" After="AppSearch">APPPOOL_NAME=""</SetProperty>
	-> Create the registry value:
		<RegistryValue Root="HKLM" Key="Software\[Manufacturer]\[ProductName]" Name="AppPool" Type="string" Value="[APPPOOL_NAME]"></RegistryValue>
	-> Create the application pool/site with a reference to the registry setting:
		<iis:WebAppPool Id="SQLRefreshDBAppPool" Name="[APPPOOL_NAME]" Identity="other" ManagedPipelineMode="Integrated" ManagedRuntimeVersion="v4.0" User="SQLRefreshDBAppPoolUser" />

